<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.nsocket</groupId>
	<artifactId>nsocket</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<dependencies>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.17</version>
		</dependency>
		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<version>1.1.1</version>
		</dependency>

	</dependencies>

	<build>
		<finalName>nioSocket-${version}</finalName>
		

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>appassembler-maven-plugin</artifactId>
				<configuration>
					<target>1.5</target>
					<!-- 生成配置文件路径 <configurationDirectory>conf</configurationDirectory> -->
					<!-- 配置文件原路径，默认为src/main/config <configurationSourceDirectory>src/main/resources</configurationSourceDirectory> 
						<copyConfigurationDirectory>true</copyConfigurationDirectory> <includeConfigurationDirectoryInClasspath>true</includeConfigurationDirectoryInClasspath> -->
					<!-- 整体包目录 -->
					<assembleDirectory>${project.parent.build.directory}/nsocket</assembleDirectory>
					<!-- jvm参数 -->
					<extraJvmArguments>-Xms1024m</extraJvmArguments>
					<!-- 生成脚本的后缀 -->
					<binFileExtensions>
						<unix>.sh</unix>
					</binFileExtensions>
					<!-- 生成哪几种平台 -->
					<platforms>
						<platform>windows</platform>
						<platform>unix</platform>
					</platforms>
					<repositoryLayout>flat</repositoryLayout>
					<!-- 依赖包目录，默认repo -->
					<repositoryName></repositoryName>
					<!-- 启动的主class -->
					<programs>
						<program>
							<mainClass>com.jd.m.server.Server</mainClass>
							<name>sessionServer</name>
						</program>
					</programs>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<phase>package</phase>
						<configuration>
							<tasks>
								<copy todir="${project.build.directory}/nsocket/bin"
									overwrite="true">
									<fileset dir="${basedir}/bin">
										<include name="*.sh" />
									</fileset>
								</copy>
								<copy todir="${project.build.directory}/nsocket/lib"
									overwrite="true">
									<fileset dir="${project.build.directory}">
										<include name="*.jar" />
									</fileset>
								</copy>
								<copy todir="${project.build.directory}/nsocket/resources"
									overwrite="true">
									<fileset
										dir="${project.parent.build.directory}/nsocket/resources">
										<include name="*.properties" />
									</fileset>
								</copy>
							</tasks>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/session-server/lib</outputDirectory>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>false</overWriteSnapshots>
							<overWriteIfNewer>true</overWriteIfNewer>
							<excludeTransitive>false</excludeTransitive>
							<stripVersion>false</stripVersion>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>

	</build>
</project>